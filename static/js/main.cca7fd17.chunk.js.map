{"version":3,"sources":["ToDo.js","ToDoForm.js","ToDoList.js","App.js","index.js"],"names":["ToDo","props","handleEdit","setState","isEditing","handleSave","evt","preventDefault","updateToDo","state","todo","id","handleChange","target","value","toDo","completed","this","className","onSubmit","name","onChange","type","onClick","toggleCompl","style","margin","remove","Component","ToDoForm","handleSubmit","newTodo","uuidv4","createToDos","display","htmlFor","placeholder","ToDoList","toDos","update","editedToDo","updatedTodos","map","el","filter","toggleCompletion","updateCompleted","toDoList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca7fd17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './ToDo.css'\r\n\r\nclass ToDo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isEditing: false, todo: this.props.toDo, completed: this.props.completed }\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n    handleSave = (evt) => {\r\n        evt.preventDefault();\r\n        this.props.updateToDo(this.state.todo, this.props.id)\r\n        this.setState({ isEditing: false })\r\n    }\r\n    handleChange = (evt) => {\r\n        this.setState({ todo: evt.target.value })\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form className=\"Todo-edit-form\" onSubmit={this.handleSave}>\r\n                        <input name=\"todo\" value={this.state.todo} onChange={this.handleChange} type=\"text\" />\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>)\r\n        } else {\r\n            result = (\r\n                <li className=\"Todo\">\r\n                    <span className={this.props.completed ? 'Todo-task completed' : 'Todo-task'} onClick={this.props.toggleCompl}>{this.props.toDo}</span>\r\n                    <span className=\"Todo-buttons\">\r\n                        <button onClick={this.handleEdit} style={{ margin: '0 10px' }}><i className=\"fas fa-edit\"></i></button>\r\n                        <button onClick={this.props.remove(this.props.id)}><i className=\"fas fa-trash-alt\"></i></button>\r\n                    </span>\r\n                </li>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ToDo;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ToDoForm.css'\r\n\r\nclass ToDoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { todo: '' }\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const newTodo = { ...this.state, id: uuidv4(), completed: false }\r\n        this.props.createToDos(newTodo)\r\n        this.setState({ todo: '' })\r\n    }\r\n\r\n    handleChange = (evt) => {\r\n        this.setState({ todo: evt.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"NewTodoForm\">\r\n                <label style={{ display: 'block', margin: '5px 0' }} htmlFor=\"insertNewToDo\">  New Todo </label>\r\n                <input id=\"insertNewToDo\" name=\"todo\" value={this.state.todo} onChange={this.handleChange} placeholder=\"New Todo\" />\r\n                <button>Add ToDo!</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoForm;","import React, { Component } from \"react\";\r\nimport ToDo from './ToDo';\r\nimport ToDoForm from './ToDoForm';\r\nimport './ToDoList.css'\r\n\r\nclass ToDoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { toDos: [] }\r\n    }\r\n    createToDos = (newTodo) => {\r\n        this.setState({ toDos: [...this.state.toDos, newTodo] })\r\n    }\r\n    update = (editedToDo, id) => {\r\n        const updatedTodos = this.state.toDos.map(el => {\r\n            return (el.id === id) ? { ...el, todo: editedToDo } : el;\r\n            // el.todo = editedToDo; return el;\r\n        })\r\n        this.setState({ toDos: updatedTodos })\r\n    }\r\n\r\n    remove = (id) => {\r\n        return () => {\r\n            this.setState({ toDos: this.state.toDos.filter(el => el.id !== id) })\r\n        }\r\n    }\r\n\r\n    toggleCompletion = (id) => {\r\n        return () => {\r\n            const updateCompleted = this.state.toDos.map(el => {\r\n                return (el.id === id) ? { ...el, completed: !el.completed } : el\r\n            })\r\n            this.setState({ toDos: updateCompleted })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const toDoList = this.state.toDos.map(el => (\r\n            <ToDo key={el.id} id={el.id} toDo={el.todo} completed={el.completed} remove={this.remove} updateToDo={this.update} toggleCompl={this.toggleCompletion(el.id)} />\r\n        ))\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1 style={{ margin: 0 }}>Todo List<span>A Simple React Todo List</span></h1>\r\n                <p className=\"TodoList-mirror\">A Simple React ToDo List</p>\r\n                <ul>{toDoList}</ul>\r\n                <ToDoForm createToDos={this.createToDos} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoList;","import './App.css';\nimport ToDoList from './ToDoList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}